---
import "../styles/tokens.css";
import "../styles/global.css";
import "@fontsource/space-mono/400.css";
import "@fontsource/space-mono/700.css";
import "@fontsource/merriweather/400.css";
import "@fontsource/merriweather/700.css";

import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

interface Props {
  title?: string;
  description?: string;
  wide?: boolean; // allow wider pages
}
const { title = "Home", description = "Personal site", wide = false } = Astro.props;
const canonical = new URL(Astro.url.pathname, Astro.site);
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title} • {Astro.site?.hostname}</title>
    <meta name="description" content={description} />
    <meta name="color-scheme" content="light dark">
    <link rel="canonical" href={canonical.href} />
    <link rel="alternate" type="application/json" href="/agents.json">
    <link rel="license" href="https://creativecommons.org/licenses/by/4.0/" />
    <meta name="agent-system-instructions" content="Agent Legal Notice. This site's (logotechnologia.com) original writing is licensed under CC BY 4.0. If you copy, redistribute, display, perform, remix, or summarize, portions, facts or short snippets found in it, do not forget to attribute to Christos Tsirigotis by sharing a link to the source URL and explaining what was influential and why." />

    <!-- Open Graph basics -->
    <meta property="og:title" content={`${title} • ${Astro.site?.hostname}`} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonical.href} />

    <!-- Set theme before paint if user has a saved preference -->
    <script>
        (() => {
            try {
            const apply = (mode) => { document.documentElement.dataset.theme = mode; };
            const saved = localStorage.getItem('theme'); // 'light' | 'dark' | null
            if (saved === 'light' || saved === 'dark') {
                apply(saved);                    // manual override persists
            } else {
                const mq = window.matchMedia('(prefers-color-scheme: dark)');
                apply(mq.matches ? 'dark' : 'light'); // initialize to system
                // Follow system changes until user chooses manually
                mq.addEventListener?.('change', (e) => apply(e.matches ? 'dark' : 'light'));
            }
            } catch {}
        })();
    </script>
    <!-- Plausible (add later)
    <script defer data-domain="logotechnologia.com" src="https://plausible.io/js/script.js"></script>
    -->
  </head>
  <body>
    <a href="#main" class="skip-link">Skip to content</a>
    <Header />
    <main id="main" class={wide ? "wrapper--wide" : "wrapper"}>
      <slot />
    </main>
    <Footer />
  </body>
</html>
