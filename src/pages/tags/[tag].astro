---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import EntryCard from "../../components/EntryCard.astro";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  const posts = await getCollection("writing");
  const set = new Set<string>();
  const add = (arr?: string[]) => arr?.forEach((t) => set.add(String(t).toLowerCase()));
  projects.forEach((e) => add(e.data.keywords));
  posts.forEach((e) => add(e.data.keywords));
  return Array.from(set).map((tag) => ({ params: { tag } }));
}

const tag = (Astro.params.tag || "").toLowerCase();

const projects = await getCollection("projects", (p) =>
  (p.data.keywords || []).map((t) => String(t).toLowerCase()).includes(tag)
);
const posts = await getCollection("writing", (p) =>
  (p.data.keywords || []).map((t) => String(t).toLowerCase()).includes(tag)
);

projects.sort((a,b)=> (b.data.date as Date).getTime() - (a.data.date as Date).getTime());
posts.sort((a,b)=> (b.data.date as Date).getTime() - (a.data.date as Date).getTime());
---

<BaseLayout title={`Tag: ${tag}`} wide={true} description={`Items tagged ${tag}`}>
  <h1>Tag: {tag}</h1>

  {projects.length > 0 && (
    <>
      <h2>Projects</h2>
      <div class="projects-grid" style="margin-top: 16px;">
        {projects.map((p) => <EntryCard entry={p} kind="project" />)}
      </div>
    </>
  )}

  {posts.length > 0 && (
    <>
      <h2 style="margin-top: var(--gap-8);">Writing</h2>
      <div class="projects-grid" style="margin-top: 16px;">
        {posts.map((p) => <EntryCard entry={p} kind="writing" />)}
      </div>
    </>
  )}

  {projects.length === 0 && posts.length === 0 && (
    <p class="muted">No items for this tag yet.</p>
  )}
</BaseLayout>
